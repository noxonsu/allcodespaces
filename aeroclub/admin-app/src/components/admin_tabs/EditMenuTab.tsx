import React from 'react';
import { API_BASE_URL } from '../../apiConfig';
import { FrontendMenuItem, ScalingLocation, ColorPalette } from './types'; // –ò–º–ø–æ—Ä—Ç –æ–±—â–∏—Ö —Ç–∏–ø–æ–≤

interface EditMenuTabProps {
  menuItems: FrontendMenuItem[];
  scalingLocations: ScalingLocation[];
  fetchMenuItems: (locationId?: string) => Promise<void>;
  onOpenDeleteDrinkModal: (item: FrontendMenuItem) => void;
  onOpenEditDrinkModal: (item: FrontendMenuItem) => void;
  openSuccessModal: (message: string) => void;
  colors: ColorPalette; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∏–ø
  // selectedLocationEdit –∏ setSelectedLocationEdit –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ã –∏–∑ AdminPage, –µ—Å–ª–∏ –æ–Ω–∏ —Ç–∞–º —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è
  // selectedLocationEdit: string; 
  // setSelectedLocationEdit: (id: string) => void;
}

const EditMenuTab: React.FC<EditMenuTabProps> = ({
  menuItems,
  scalingLocations,
  fetchMenuItems,
  onOpenDeleteDrinkModal,
  onOpenEditDrinkModal,
  openSuccessModal,
  colors,
  // selectedLocationEdit, // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è
  // setSelectedLocationEdit, // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è
}) => {
  const [selectedLocationUpload, setSelectedLocationUpload] = React.useState("");
  // –ï—Å–ª–∏ selectedLocationEdit –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∏–∑ AdminPage, —É–ø—Ä–∞–≤–ª—è–µ–º –∏–º –∑–¥–µ—Å—å
  const [currentSelectedLocationEdit, setCurrentSelectedLocationEdit] = React.useState("");


  const [newDrinkName, setNewDrinkName] = React.useState("");
  const [newDrinkPrice, setNewDrinkPrice] = React.useState<number | string>("");
  const [newDrinkImageFile, setNewDrinkImageFile] = React.useState<File | null>(null);
  const [fileName, setFileName] = React.useState("");

  React.useEffect(() => {
    // –ï—Å–ª–∏ selectedLocationEdit —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∑–¥–µ—Å—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º currentSelectedLocationEdit
    // –ò–Ω–∞—á–µ, –µ—Å–ª–∏ selectedLocationEdit –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ prop, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    const locationToFetch = /*selectedLocationEdit !== undefined ? selectedLocationEdit :*/ currentSelectedLocationEdit;
    fetchMenuItems(locationToFetch || undefined);
  }, [/*selectedLocationEdit,*/ currentSelectedLocationEdit, fetchMenuItems]);

  const locationOptionsForFilter = [
    { id: "", address: "–í—Å–µ –ª–æ–∫–∞—Ü–∏–∏" },
    ...scalingLocations,
  ];

  const locationOptionsForUpload = [
    { id: "", address: "–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é" },
    ...scalingLocations,
  ];

  const handleCreateMenuItem = async () => {
    const token = localStorage.getItem('accessToken');
    if (!token) { alert("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞."); return; }
    if (!newDrinkName.trim() || newDrinkPrice === "" || isNaN(parseFloat(String(newDrinkPrice))) || parseFloat(String(newDrinkPrice)) < 0) {
      alert("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º, –∞ —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.");
      return;
    }
    const formData = new FormData();
    formData.append('name', newDrinkName.trim());
    formData.append('price', String(newDrinkPrice));
    if (newDrinkImageFile) formData.append('image', newDrinkImageFile);

    try {
      const response = await fetch(`${API_BASE_URL}/api/v1/menu-items/`, {
        method: 'POST',
        headers: { 'Authorization': `Bearer ${token}` },
        body: formData,
      });
      if (response.status === 201) {
        const newItem = await response.json();
        openSuccessModal(`–ù–∞–ø–∏—Ç–æ–∫ "${newItem.name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.`);
        setNewDrinkName(""); setNewDrinkPrice(""); setNewDrinkImageFile(null); setFileName("");

        if (selectedLocationUpload && newItem.id) {
          try {
            const assocResponse = await fetch(`${API_BASE_URL}/api/v1/locations/${selectedLocationUpload}/menu-items/${newItem.id}/associate`, {
              method: 'POST',
              headers: { 'Authorization': `Bearer ${token}` },
            });
            if (!assocResponse.ok) {
              const assocErrorData = await assocResponse.json().catch(() => null);
              console.error("Failed to associate menu item with location:", assocErrorData?.detail || assocResponse.statusText);
              alert(`–ù–∞–ø–∏—Ç–æ–∫ —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ –ª–æ–∫–∞—Ü–∏–∏: ${assocErrorData?.detail || assocResponse.statusText}`);
            } else {
              console.log(`Menu item ${newItem.id} associated with location ${selectedLocationUpload}`);
            }
          } catch (assocError) {
            console.error("Error associating menu item with location:", assocError);
            alert("–ù–∞–ø–∏—Ç–æ–∫ —Å–æ–∑–¥–∞–Ω, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –∫ –ª–æ–∫–∞—Ü–∏–∏.");
          }
        }
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –º–µ–Ω—é –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏ (–∏–ª–∏ –≤—Å–µ—Ö, –µ—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞)
        const locationToRefresh = /*selectedLocationEdit !== undefined ? selectedLocationEdit :*/ currentSelectedLocationEdit;
        fetchMenuItems(locationToRefresh || undefined);
      } else {
        const errorData = await response.json();
        alert(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–∏—Ç–∫–∞: ${errorData.detail || response.statusText}`);
      }
    } catch (error) {
      console.error("Error creating menu item:", error);
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–∞–ø–∏—Ç–∫–∞.");
    }
  };
  
  const handleLocationEditChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const newLocationId = e.target.value;
    // if (setSelectedLocationEdit) { // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–¥–∞–Ω–∞ –∏–∑ AdminPage
    //   setSelectedLocationEdit(newLocationId);
    // } else { // –ò–Ω–∞—á–µ —É–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∑–¥–µ—Å—å
      setCurrentSelectedLocationEdit(newLocationId);
    // }
  };


  return (
    <>
      <div className="content-section upload-drinks">
        <h2>–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –Ω–∞–ø–∏—Ç–∫–∏</h2>
        <div className="form-container users-list-container">
          <div className="form-row">
            <div className="form-group">
              <label>–õ–æ–∫–∞—Ü–∏—è</label>
              <div className="input-wrapper select-wrapper">
                <select value={selectedLocationUpload} onChange={(e) => setSelectedLocationUpload(e.target.value)}>
                  {locationOptionsForUpload.map(loc => (
                    <option key={loc.id} value={loc.id}>{loc.address}</option>
                  ))}
                </select>
              </div>
            </div>
            <div className="form-group">
              <label>–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞</label>
              <div className="input-wrapper">
                <input type="text" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ" value={newDrinkName} onChange={(e) => setNewDrinkName(e.target.value)} />
              </div>
            </div>
            <div className="form-group">
              <label>–¶–µ–Ω–∞</label>
              <div className="input-wrapper">
                <input type="number" placeholder="–¶–µ–Ω–∞" value={newDrinkPrice} onChange={(e) => setNewDrinkPrice(e.target.value)} className="price-input" />
              </div>
            </div>
            <div className="form-group">
              <label>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</label>
              <div className="input-wrapper file-input-wrapper">
                <label htmlFor="fileUploadMenu" style={{ display: 'flex', alignItems: 'center', width: '100%', cursor: 'pointer', paddingLeft: 0, marginBottom: 0 }}>
                  <span className="icon-placeholder">üìé</span>
                  <span>{fileName || "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª"}</span>
                </label>
                <input
                  type="file"
                  style={{ display: 'none' }}
                  id="fileUploadMenu"
                  accept="image/*"
                  onChange={(e) => {
                    if (e.target.files && e.target.files.length > 0) {
                      setFileName(e.target.files[0].name);
                      setNewDrinkImageFile(e.target.files[0]);
                    } else {
                      setFileName("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª");
                      setNewDrinkImageFile(null);
                    }
                  }}
                />
              </div>
            </div>
          </div>
          <div className="form-actions">
            <button 
              className="save-button" 
              onClick={handleCreateMenuItem} 
              disabled={!newDrinkName.trim() || newDrinkPrice === "" || isNaN(parseFloat(String(newDrinkPrice))) || parseFloat(String(newDrinkPrice)) < 0}
              style={{ opacity: (!newDrinkName.trim() || newDrinkPrice === "" || isNaN(parseFloat(String(newDrinkPrice))) || parseFloat(String(newDrinkPrice)) < 0) ? 0.4 : 1 }}
            >
              –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–∏—Ç–æ–∫
            </button>
            <button className="cancel-button">–û—Ç–º–µ–Ω–∞</button>
          </div>
        </div>
      </div>
      <div className="content-section edit-menu">
        <h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω—é</h2>
        <div className="menu-container users-list-container">
          <div className="form-group location-filter" style={{ marginBottom: '40px' }}> {/* –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –æ—Ç—Å—Ç—É–ø */}
            <label>–õ–æ–∫–∞—Ü–∏—è</label>
            <div className="input-wrapper select-wrapper">
              <select 
                value={/*selectedLocationEdit !== undefined ? selectedLocationEdit :*/ currentSelectedLocationEdit} 
                onChange={handleLocationEditChange} 
              >
                {locationOptionsForFilter.map(loc => (
                  <option key={loc.id} value={loc.id}>{loc.address}</option>
                ))}
              </select>
            </div>
          </div>
          <div className="product-grid">
            {menuItems.length > 0 ? menuItems.map((item) => (
              <div key={item.id} className="product-card">
                <div className="product-card-image-name">
                  <img
                    src={item.image_filename ? `${API_BASE_URL}/uploads/menu_images/${item.image_filename}` : `${process.env.PUBLIC_URL}/images/placeholder.png`}
                    alt={item.name}
                    className="product-image"
                    onError={e => {
                      e.currentTarget.onerror = null;
                      e.currentTarget.src = `${process.env.PUBLIC_URL}/images/placeholder.png`;
                    }}
                  />
                  <span className="product-name">{item.name}</span>
                  <span className="product-price">{item.price} —Ä—É–±.</span>
                </div>
                <div className="product-card-actions">
                  <button className="icon-button" onClick={() => onOpenEditDrinkModal(item)}>
                    <span className="icon-placeholder">‚úèÔ∏è</span>
                  </button>
                  <button className="icon-button" onClick={() => onOpenDeleteDrinkModal(item)}>
                    <span className="icon-placeholder">üóëÔ∏è</span>
                  </button>
                </div>
              </div>
            )) : (
              <p className="no-items-message">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –≤—ã—à–µ.</p>
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default EditMenuTab;
