<?php

declare(strict_types=1);

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º production –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
if (!getenv('ENVIRONMENT')) {
    putenv('ENVIRONMENT=production');
}

// –í–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
require_once __DIR__ . '/config.php';
require_once __DIR__ . '/logger.php';
require_once __DIR__ . '/lib/amo_auth_utils.php';
require_once __DIR__ . '/lib/request_utils.php';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–æ–≤
function checkTokensValidity($tokensPath) {
    if (!file_exists($tokensPath)) {
        return ['status' => 'missing', 'message' => '–§–∞–π–ª —Ç–æ–∫–µ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'];
    }
    
    $tokensData = json_decode(file_get_contents($tokensPath), true);
    if (!$tokensData) {
        return ['status' => 'invalid', 'message' => '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª —Ç–æ–∫–µ–Ω–æ–≤'];
    }
    
    if (!isset($tokensData['access_token'])) {
        return ['status' => 'invalid', 'message' => 'Access token –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ'];
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
    if (isset($tokensData['expires_at']) && time() > $tokensData['expires_at']) {
        return ['status' => 'expired', 'message' => '–¢–æ–∫–µ–Ω—ã –∏—Å—Ç–µ–∫–ª–∏', 'data' => $tokensData];
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ API
    try {
        $testUrl = AMO_API_URL_BASE . '/account';
        $response = httpClient($testUrl, [
            'headers' => ['Authorization: Bearer ' . $tokensData['access_token']],
            'timeout' => 10
        ]);
        
        if ($response['statusCode'] === 200) {
            $accountData = json_decode($response['body'], true);
            return [
                'status' => 'valid', 
                'message' => '–¢–æ–∫–µ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
                'data' => $tokensData,
                'account' => $accountData
            ];
        } elseif ($response['statusCode'] === 401) {
            return ['status' => 'unauthorized', 'message' => '–¢–æ–∫–µ–Ω—ã –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã (401 Unauthorized)', 'data' => $tokensData];
        } else {
            return ['status' => 'error', 'message' => '–û—à–∏–±–∫–∞ API: ' . $response['statusCode'] . ' - ' . $response['body'], 'data' => $tokensData];
        }
        
    } catch (Exception $e) {
        return ['status' => 'error', 'message' => '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: ' . $e->getMessage(), 'data' => $tokensData];
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function renderPage($title, $content, $includeScript = false) {
    $script = '';
    if ($includeScript) {
        $script = '<script>
            function closePopup() {
                if (window.opener) {
                    window.opener.postMessage("auth_complete", "*");
                    window.close();
                } else {
                    window.location.href = window.location.origin + window.location.pathname;
                }
            }
        </script>';
    }
    
    return '<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>' . htmlspecialchars($title) . '</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            max-width: 800px; 
            margin: 50px auto; 
            padding: 20px; 
            background: #f5f5f5; 
        }
        .container { 
            background: white; 
            padding: 30px; 
            border-radius: 10px; 
            box-shadow: 0 2px 10px rgba(0,0,0,0.1); 
        }
        .btn { 
            display: inline-block; 
            padding: 12px 24px; 
            background: #007cba; 
            color: white; 
            text-decoration: none; 
            border-radius: 5px; 
            margin: 10px 5px; 
            border: none;
            cursor: pointer;
            font-size: 16px;
        }
        .btn:hover { background: #005a87; }
        .btn-success { background: #28a745; }
        .btn-success:hover { background: #1e7e34; }
        .status { 
            padding: 15px; 
            border-radius: 5px; 
            margin: 15px 0; 
        }
        .status.success { 
            background: #d4edda; 
            color: #155724; 
            border: 1px solid #c3e6cb; 
        }
        .status.error { 
            background: #f8d7da; 
            color: #721c24; 
            border: 1px solid #f5c6cb; 
        }
        .status.info { 
            background: #d1ecf1; 
            color: #0c5460; 
            border: 1px solid #bee5eb; 
        }
        .code-block {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 10px;
            font-family: monospace;
            margin: 10px 0;
            overflow-x: auto;
        }
        h1 { color: #333; margin-bottom: 20px; }
        h2 { color: #666; margin-top: 30px; }
        .env-name { 
            float: right; 
            background: ' . (getenv('ENVIRONMENT') === 'production' ? '#dc3545' : '#ffc107') . '; 
            color: white; 
            padding: 5px 10px; 
            border-radius: 3px; 
            font-size: 12px; 
        }
    </style>
    ' . $script . '
</head>
<body>
    <div class="container">
        <span class="env-name">' . strtoupper(getenv('ENVIRONMENT') ?: 'production') . '</span>
        <h1>' . htmlspecialchars($title) . '</h1>
        ' . $content . '
    </div>
</body>
</html>';
}

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ GET –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
$authCode = $_GET['code'] ?? '';
$error = $_GET['error'] ?? '';
$errorDescription = $_GET['error_description'] ?? '';
$action = $_GET['action'] ?? '';

// –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
if ($action === 'check_tokens') {
    $tokensPath = DATA_DIR . '/amo_tokens.json';
    $checkResult = checkTokensValidity($tokensPath);
    
    logMessage('[OAuth] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤: ' . $checkResult['status'] . ' - ' . $checkResult['message']);
    
    $statusClass = '';
    $statusIcon = '';
    switch ($checkResult['status']) {
        case 'valid':
            $statusClass = 'success';
            $statusIcon = '‚úÖ';
            break;
        case 'expired':
        case 'unauthorized':
            $statusClass = 'error';
            $statusIcon = '‚ùå';
            break;
        case 'missing':
        case 'invalid':
            $statusClass = 'error';
            $statusIcon = '‚ùå';
            break;
        default:
            $statusClass = 'error';
            $statusIcon = '‚ö†Ô∏è';
    }
    
    $content = '<div class="status ' . $statusClass . '">
        <h2>' . $statusIcon . ' –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤</h2>
        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ' . htmlspecialchars($checkResult['status']) . '</p>
        <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> ' . htmlspecialchars($checkResult['message']) . '</p>';
    
    if (isset($checkResult['account'])) {
        $account = $checkResult['account'];
        $content .= '<h3>üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ</h3>
            <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> ' . htmlspecialchars($account['name'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . '</p>
            <p><strong>–ü–æ–¥–¥–æ–º–µ–Ω:</strong> ' . htmlspecialchars($account['subdomain'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . '</p>
            <p><strong>ID:</strong> ' . htmlspecialchars($account['id'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . '</p>';
    }
    
    if (isset($checkResult['data'])) {
        $data = $checkResult['data'];
        $content .= '<h3>üîë –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–∞—Ö</h3>
            <p><strong>Access Token:</strong> ' . substr($data['access_token'] ?? '', 0, 50) . '...</p>
            <p><strong>Refresh Token:</strong> ' . substr($data['refresh_token'] ?? '', 0, 50) . '...</p>';
        
        if (isset($data['expires_at'])) {
            $expiresAt = date('Y-m-d H:i:s', $data['expires_at']);
            $isExpired = time() > $data['expires_at'];
            $content .= '<p><strong>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</strong> ' . $expiresAt . ' ' . 
                       ($isExpired ? '<span style="color: red;">(–∏—Å—Ç–µ–∫–ª–∏)</span>' : '<span style="color: green;">(–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã)</span>') . '</p>';
        }
    }
    
    $content .= '</div>';
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º
    if ($checkResult['status'] === 'expired' || $checkResult['status'] === 'unauthorized') {
        $content .= '<div class="status info">
            <h3>üîÑ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
            <p>–¢–æ–∫–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–∏—Ç—å. –í—ã –º–æ–∂–µ—Ç–µ:</p>
            <ul>
                <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π refresh token (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)</li>
                <li>–ü—Ä–æ–≤–µ—Å—Ç–∏ –Ω–æ–≤—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é</li>
            </ul>
        </div>';
    }
    
    $content .= '<a href="?" class="btn">üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é</a>
                <a href="?action=check_tokens" class="btn">üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–Ω–æ–≤–∞</a>';
    
    if ($checkResult['status'] !== 'valid') {
        $content .= '<a href="?action=auth" class="btn">üîë –ù–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</a>';
    }
    
    echo renderPage('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ AmoCRM', $content);
    exit;
}

// –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞ OAuth
if ($error) {
    $content = '<div class="status error">
        <h2>‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h2>
        <p><strong>–û—à–∏–±–∫–∞:</strong> ' . htmlspecialchars($error) . '</p>';
    
    if ($errorDescription) {
        $content .= '<p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ' . htmlspecialchars($errorDescription) . '</p>';
    }
    
    $content .= '<p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞:</p>
        <a href="?action=auth" class="btn">üîë –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é</a>
    </div>';
    
    echo renderPage('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ AmoCRM', $content);
    exit;
}

// –ï—Å–ª–∏ –ø—Ä–∏—à–µ–ª –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if ($authCode) {
    try {
        logMessage('[OAuth] –ü–æ–ª—É—á–µ–Ω –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' . substr($authCode, 0, 20) . '...');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
        $tokens = getNewTokens($authCode);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ API
        $testUrl = AMO_API_URL_BASE . '/account';
        
        $response = httpClient($testUrl, [
            'headers' => ['Authorization: Bearer ' . $tokens['access_token']],
            'timeout' => 15
        ]);
        
        if ($response['statusCode'] === 200) {
            $accountData = json_decode($response['body'], true);
            
            $content = '<div class="status success">
                <h2>‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!</h2>
                <p><strong>–ê–∫–∫–∞—É–Ω—Ç:</strong> ' . htmlspecialchars($accountData['name'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . '</p>
                <p><strong>–ü–æ–¥–¥–æ–º–µ–Ω:</strong> ' . htmlspecialchars($accountData['subdomain'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . '</p>
                <p><strong>ID –∞–∫–∫–∞—É–Ω—Ç–∞:</strong> ' . htmlspecialchars($accountData['id'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . '</p>
                <p><strong>–û–∫—Ä—É–∂–µ–Ω–∏–µ:</strong> ' . strtoupper(getenv('ENVIRONMENT') ?: 'production') . '</p>
            </div>
            
            <div class="status info">
                <h2>üìã –î–µ—Ç–∞–ª–∏ —Ç–æ–∫–µ–Ω–æ–≤</h2>
                <p><strong>Access Token:</strong> ' . substr($tokens['access_token'], 0, 50) . '...</p>
                <p><strong>Refresh Token:</strong> ' . substr($tokens['refresh_token'], 0, 50) . '...</p>
                <p><strong>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</strong> ' . ($tokens['expires_in'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . ' —Å–µ–∫—É–Ω–¥</p>
                <p><strong>–§–∞–π–ª —Ç–æ–∫–µ–Ω–æ–≤:</strong> ' . DATA_DIR . '/amo_tokens.json</p>
            </div>
            
            <div class="status info">
                <h2>üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞</h2>
                <p>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:</p>
                <div class="code-block">AMO_AUTH_CODE=' . htmlspecialchars($authCode) . '</div>
                <p><em>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑. 
                –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–≤—ã–π –∫–æ–¥.</em></p>
            </div>
            
            <button onclick="closePopup()" class="btn btn-success">‚úÖ –ì–æ—Ç–æ–≤–æ</button>
            <a href="?" class="btn">üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é</a>';
            
            logMessage('[OAuth] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞: ' . ($accountData['subdomain'] ?? 'unknown'));
            
        } else {
            throw new Exception('–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API: ' . $response['statusCode'] . ' - ' . $response['body']);
        }
        
    } catch (Exception $e) {
        logMessage('[OAuth] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' . $e->getMessage());
        
        $content = '<div class="status error">
            <h2>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤</h2>
            <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>
        </div>
        
        <div class="status info">
            <h2>üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã</h2>
            <ul>
                <li>–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É–∂–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ä–∞–Ω–µ–µ</li>
                <li>–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫ (—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è ~10 –º–∏–Ω—É—Ç)</li>
                <li>–ù–µ–≤–µ—Ä–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</li>
                <li>–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º</li>
            </ul>
        </div>
        
        <a href="?action=auth" class="btn">üîë –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</a>';
    }
    
    echo renderPage('–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ AmoCRM', $content, true);
    exit;
}

// –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
if ($action === 'auth') {
    $authUrl = sprintf(
        'https://www.amocrm.ru/oauth?client_id=%s&response_type=code&redirect_uri=%s',
        AMO_INTEGRATION_ID,
        urlencode(AMO_REDIRECT_URI)
    );
    
    $content = '<div class="status info">
        <h2>üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ AmoCRM</h2>
        <p>–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ AmoCRM.</p>
        <p><strong>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è ID:</strong> ' . htmlspecialchars(AMO_INTEGRATION_ID) . '</p>
        <p><strong>Redirect URI:</strong> ' . htmlspecialchars(AMO_REDIRECT_URI) . '</p>
        <p><strong>–î–æ–º–µ–Ω AmoCRM:</strong> ' . htmlspecialchars(AMO_DOMAIN) . '</p>
    </div>
    
    <a href="' . htmlspecialchars($authUrl) . '" class="btn" target="_blank">
        üöÄ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ AmoCRM
    </a>
    
    <div class="status info" style="margin-top: 20px;">
        <h3>üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
        <ol>
            <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</li>
            <li>–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç AmoCRM</li>
            <li>–†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é</li>
            <li>–í—ã –±—É–¥–µ—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞—Ç–Ω–æ</li>
        </ol>
    </div>';
    
    echo renderPage('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è AmoCRM', $content);
    exit;
}

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
$currentAuthCode = getenv('AMO_AUTH_CODE') ?: '';
$tokensPath = DATA_DIR . '/amo_tokens.json';
$hasTokens = file_exists($tokensPath);
$tokensInfo = '';

if ($hasTokens) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã
    $checkResult = checkTokensValidity($tokensPath);
    
    $statusClass = '';
    $statusIcon = '';
    switch ($checkResult['status']) {
        case 'valid':
            $statusClass = 'success';
            $statusIcon = '‚úÖ';
            break;
        case 'expired':
        case 'unauthorized':
            $statusClass = 'error';
            $statusIcon = '‚ùå';
            break;
        case 'missing':
        case 'invalid':
            $statusClass = 'error';
            $statusIcon = '‚ùå';
            break;
        default:
            $statusClass = 'error';
            $statusIcon = '‚ö†Ô∏è';
    }
    
    $tokensInfo = '<div class="status ' . $statusClass . '">
        <h2>' . $statusIcon . ' –°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–æ–≤</h2>
        <p><strong>–§–∞–π–ª —Ç–æ–∫–µ–Ω–æ–≤:</strong> ' . htmlspecialchars($tokensPath) . '</p>
        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ' . htmlspecialchars($checkResult['message']) . '</p>';
    
    if (isset($checkResult['data']) && isset($checkResult['data']['expires_at'])) {
        $expiresAt = date('Y-m-d H:i:s', $checkResult['data']['expires_at']);
        $isExpired = time() > $checkResult['data']['expires_at'];
        $tokensInfo .= '<p><strong>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</strong> ' . $expiresAt . ' ' . 
                      ($isExpired ? '<span style="color: red;">(–∏—Å—Ç–µ–∫–ª–∏)</span>' : '<span style="color: green;">(–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã)</span>') . '</p>';
    }
    
    if (isset($checkResult['account'])) {
        $account = $checkResult['account'];
        $tokensInfo .= '<p><strong>–ê–∫–∫–∞—É–Ω—Ç:</strong> ' . htmlspecialchars($account['name'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . 
                      ' (' . htmlspecialchars($account['subdomain'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . ')</p>';
    }
    
    $tokensInfo .= '</div>';
} else {
    $tokensInfo = '<div class="status error">
        <h2>‚ùå –¢–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h2>
        <p>–§–∞–π–ª —Ç–æ–∫–µ–Ω–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ' . htmlspecialchars($tokensPath) . '</p>
    </div>';
}

$authCodeInfo = '';
if ($currentAuthCode) {
    $authCodeInfo = '<div class="status info">
        <h2>üîë –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω</h2>
        <p><strong>–ö–æ–¥:</strong> ' . substr($currentAuthCode, 0, 50) . '...</p>
        <p><em>–ö–æ–¥ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è AMO_AUTH_CODE</em></p>
    </div>';
} else {
    $authCodeInfo = '<div class="status error">
        <h2>‚ùå –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
        <p>–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è AMO_AUTH_CODE –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è</p>
    </div>';
}

$content = '<h2>üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</h2>
<div class="status info">
    <p><strong>–û–∫—Ä—É–∂–µ–Ω–∏–µ:</strong> ' . strtoupper(getenv('ENVIRONMENT') ?: 'production') . '</p>
    <p><strong>AmoCRM –¥–æ–º–µ–Ω:</strong> ' . htmlspecialchars(AMO_DOMAIN) . '</p>
    <p><strong>Integration ID:</strong> ' . htmlspecialchars(AMO_INTEGRATION_ID) . '</p>
    <p><strong>Redirect URI:</strong> ' . htmlspecialchars(AMO_REDIRECT_URI) . '</p>
</div>

' . $tokensInfo . '
' . $authCodeInfo . '

<h2>üöÄ –î–µ–π—Å—Ç–≤–∏—è</h2>
<a href="?action=auth" class="btn">üîë –ù–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</a>';

if ($hasTokens) {
    $content .= '<a href="?action=check_tokens" class="btn">üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω—ã</a>';
}

if ($currentAuthCode) {
    $content .= '<a href="get_production_tokens.php" class="btn" target="_blank">üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∏–∑ –∫–æ–¥–∞</a>';
}

$content .= '<div style="margin-top: 30px;">
    <h3>‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞</h3>
    <p><strong>OAuth URL –¥–ª—è —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:</strong></p>
    <div class="code-block">https://www.amocrm.ru/oauth?client_id=' . htmlspecialchars(AMO_INTEGRATION_ID) . '</div>
    
    <p><strong>–≠—Ç–∞–ø—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:</strong></p>
    <ol>
        <li>–ù–∞–∂–º–∏—Ç–µ "–ù–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞</li>
        <li>–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–æ–¥ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
        <li>–¢–æ–∫–µ–Ω—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: <code>' . htmlspecialchars($tokensPath) . '</code></li>
        <li>–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–∏—Ç–µ AMO_AUTH_CODE –≤ .env —Ñ–∞–π–ª–µ</li>
    </ol>
    
    <p><strong>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:</strong></p>
    <ul>
        <li>–ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω—ã" –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API AmoCRM</li>
        <li>–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API</li>
        <li>–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ</li>
        <li>–ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç—Å—è –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è</li>
    </ul>
</div>';

echo renderPage('OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è AmoCRM', $content);
